[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Ubuntu Java 11.0.11)
[debug]       Load.loadUnit: plugins took 94.76015ms
[debug]       Load.loadUnit: defsScala took 0.331564ms
[debug] [Loading] Scanning directory /home/rachid/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/rachid/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.653474 ms
[debug]           Load.resolveProject(global-plugins) took 42.334355ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/rachid/.sbt/1.0/plugins, plugins: List(<none>))) took 86.180752ms
[debug] [Loading] Done in /home/rachid/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 104.762562ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.250692ms
[debug]     Load.loadUnit(file:/home/rachid/.sbt/1.0/plugins/, ...) took 208.175789ms
[debug]   Load.apply: load took 385.896026ms
[debug]   Load.apply: resolveProjects took 6.259056ms
[debug]   Load.apply: finalTransforms took 58.334939ms
[debug]   Load.apply: config.delegates took 6.587885ms
[debug]   Load.apply: Def.make(settings)... took 323.596424ms
[debug]   Load.apply: structureIndex took 84.894447ms
[debug]   Load.apply: mkStreams took 1.519806ms
[info] loading global plugins from /home/rachid/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2222.720868ms
[debug]           Load.loadUnit: plugins took 11.509189ms
[debug]           Load.loadUnit: defsScala took 0.003343ms
[debug] [Loading] Scanning directory /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.415217 ms
[debug]               Load.resolveProject(streamhandler-build) took 0.846364ms
[debug]             Load.loadTransitive: finalizeProject(Project(id streamhandler-build, base: /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler/project, plugins: List(<none>))) took 2.679583ms
[debug] [Loading] Done in /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler/project, returning: (streamhandler-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4.01282ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007298ms
[debug]         Load.loadUnit(file:/home/rachid/Bureau/LinkeDocs/in%20-%20Projects/Spark%20Structured%20Streaming%20-%20using%20Kafka%20Spark%20Cassandra/StreamHandler/project/, ...) took 16.024224ms
[debug]       Load.apply: load took 17.0608ms
[debug]       Load.apply: resolveProjects took 0.083144ms
[debug]       Load.apply: finalTransforms took 18.29441ms
[debug]       Load.apply: config.delegates took 0.318674ms
[debug]       Load.apply: Def.make(settings)... took 102.90093ms
[debug]       Load.apply: structureIndex took 41.890577ms
[debug]       Load.apply: mkStreams took 0.003028ms
[info] loading project definition from /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 299.627878ms
[debug]     Load.loadUnit: defsScala took 0.004576ms
[debug] [Loading] Scanning directory /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler
[debug]       Load.loadUnit: mkEval took 4.886834ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.272549 ms
[info] loading settings for project streamhandler from build.sbt ...
[debug]         Load.resolveProject(streamhandler) took 2.221258ms
[debug]       Load.loadTransitive: finalizeProject(Project(id streamhandler, base: /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler, plugins: List(<none>))) took 3.920936ms
[debug] [Loading] Done in /home/rachid/Bureau/LinkeDocs/in - Projects/Spark Structured Streaming - using Kafka Spark Cassandra/StreamHandler, returning: (streamhandler)
[debug]     Load.loadUnit: loadedProjectsRaw took 82.693087ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.646376ms
[debug]   Load.loadUnit(file:/home/rachid/Bureau/LinkeDocs/in%20-%20Projects/Spark%20Structured%20Streaming%20-%20using%20Kafka%20Spark%20Cassandra/StreamHandler/, ...) took 386.61857ms
[debug] Load.apply: load took 387.997511ms
[debug] Load.apply: resolveProjects took 0.078303ms
[debug] Load.apply: finalTransforms took 12.491776ms
[debug] Load.apply: config.delegates took 0.421823ms
[debug] Load.apply: Def.make(settings)... took 102.817126ms
[debug] Load.apply: structureIndex took 18.572494ms
[debug] Load.apply: mkStreams took 0.002012ms
[info] set current project to Stream Handler (in build file:/home/rachid/Bureau/LinkeDocs/in%20-%20Projects/Spark%20Structured%20Streaming%20-%20using%20Kafka%20Spark%20Cassandra/StreamHandler/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/rachid/.sbt/1.0/server/aff109681686a346567c/sock
[info] started sbt server
